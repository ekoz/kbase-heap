version: '3'

services:
  elasticsearch-1:
    image: elasticsearch:6.8.7
    container_name: es-master-docker
    restart: always
    environment:
    - cluster.name=ibotEsApp
    - bootstrap.memory_lock=true
    - TAKE_FILE_OWNERSHIP=true
    - "http.cors.enabled=true"
    - "http.cors.allow-origin=*"
    - "transport.host=0.0.0.0"
    - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
    - 9200:9200
    - 9300:9300
    volumes:
    #      - ./elasticsearch/master/conf/es-master.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    - ./elasticsearch/master/data:/usr/share/elasticsearch/data
    - ./elasticsearch/master/logs:/usr/share/elasticsearch/logs
    networks:
    - esnet
  elasticsearch-2:
    image: elasticsearch:6.8.7
    container_name: es-slave-docker
    environment:
    - cluster.name=ibotEsApp
    - bootstrap.memory_lock=true
    - TAKE_FILE_OWNERSHIP=true
    - "http.cors.enabled=true"
    - "http.cors.allow-origin=*"
    - "transport.host=0.0.0.0"
    - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    - "discovery.zen.ping.unicast.hosts=es-master-docker"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
    - 9201:9200
    - 9301:9300
    volumes:
    #      - ./elasticsearch/slave1/conf/es-slave1.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    - ./elasticsearch/slave1/data:/usr/share/elasticsearch/data
    - ./elasticsearch/slave1/logs:/usr/share/elasticsearch/logs
    networks:
    - esnet
  kibana-1:
    container_name: kibana-docker
    image: kibana:6.8.7
    restart: always
    # volumes:
    #   - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
    - ELASTICSEARCH_URL=http://es-master-docker:9200
    ports:
    - "5601:5601"
    networks:
    - esnet
  es-head-1:
    container_name: es-head-docker
    image: mobz/elasticsearch-head:5
    restart: always
    ports:
    - 9100:9100
    networks:
    - esnet
    depends_on:
    - elasticsearch-1
    - elasticsearch-2
networks:
  esnet:
    driver: bridge
  # default:
  #   external:
  #   # docker network create -d bridgeesnet
  #     name: esnet